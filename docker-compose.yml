services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DBNAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PSQL_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  secure-uploader-server:
    build: .
    container_name: secure-uploader-server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      PSQL_HOST: postgres
      PSQL_PORT: 5432
      PSQL_USER: ${PSQL_USER}
      PSQL_PASSWORD: ${PSQL_PASSWORD}
      PSQL_DBNAME: ${PSQL_DBNAME}
    volumes:
      - uploader-data:/data

  app:
    build: .
    container_name: cautious-dollop
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GIN_PORT: ${GIN_PORT}
      PSQL_HOST: postgres
      PSQL_PORT: 5432
      PSQL_USER: ${PSQL_USER}
      PSQL_PASSWORD: ${PSQL_PASSWORD}
      PSQL_DBNAME: ${PSQL_DBNAME}
    ports:
      - "8081:8080"

  node-server:
    build:
      context: ./node-server
    container_name: node-server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      PSQL_HOST: postgres
      PSQL_PORT: 5432
      PSQL_USER: ${PSQL_USER}
      PSQL_PASSWORD: ${PSQL_PASSWORD}
      PSQL_DBNAME: ${PSQL_DBNAME}
    volumes:
      - ./node-server:/usr/src/app
    working_dir: /usr/src/app
    command: ["npm", "start"]

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - node-server
      - secure-uploader-server

volumes:
  uploader-data:
  postgres_data:
